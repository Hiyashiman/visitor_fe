{"ast":null,"code":"// import React, { useState } from \"react\";\n// import \"./Card.css\";\n// import { CircularProgressbar } from \"react-circular-progressbar\";\n// import \"react-circular-progressbar/dist/styles.css\";\n// import { motion, AnimateSharedLayout } from \"framer-motion\";\n// import { UilTimes } from \"@iconscout/react-unicons\";\n// import Chart from \"react-apexcharts\";\n\n// // parent Card\n\n// const Card = (props) => {\n//   const [expanded, setExpanded] = useState(false);\n//   return (\n//     <AnimateSharedLayout>\n//       {expanded ? (\n//         <ExpandedCard param={props} setExpanded={() => setExpanded(false)} />\n//       ) : (\n//         <CompactCard param={props} setExpanded={() => setExpanded(true)} />\n//       )}\n//     </AnimateSharedLayout>\n//   );\n// };\n\n// // Compact Card\n// function CompactCard({ param, setExpanded }) {\n//   const Png = param.png;\n//   return (\n//     <motion.div\n//       className=\"CompactCard\"\n//       style={{\n//         background: param.color.backGround,\n//         boxShadow: param.color.boxShadow,\n//       }}\n//       layoutId=\"expandableCard\"\n//       onClick={setExpanded}\n//     >\n//       <div className=\"radialBar\">\n//         <CircularProgressbar\n//           value={param.barValue}\n//           text={`${param.barValue}%`}\n//         />\n//         <span>{param.title}</span>\n//       </div>\n//       <div className=\"detail\">\n//         <Png />\n//         <span>{param.value}</span>\n//         <span>Last 24 hours</span>\n//       </div>\n//     </motion.div>\n//   );\n// }\n\n// // Expanded Card\n// function ExpandedCard({ param, setExpanded }) {\n//   const data = {\n//     options: {\n//       chart: {\n//         type: \"area\",\n//         height: \"auto\",\n//       },\n\n//       dropShadow: {\n//         enabled: false,\n//         enabledOnSeries: undefined,\n//         top: 0,\n//         left: 0,\n//         blur: 3,\n//         color: \"#000\",\n//         opacity: 0.35,\n//       },\n\n//       fill: {\n//         colors: [\"#fff\"],\n//         type: \"gradient\",\n//       },\n//       dataLabels: {\n//         enabled: false,\n//       },\n//       stroke: {\n//         curve: \"smooth\",\n//         colors: [\"white\"],\n//       },\n//       tooltip: {\n//         x: {\n//           format: \"dd/MM/yy HH:mm\",\n//         },\n//       },\n//       grid: {\n//         show: true,\n//       },\n//       xaxis: {\n//         type: \"datetime\",\n//         categories: [\n//           \"2018-09-19T00:00:00.000Z\",\n//           \"2018-09-19T01:30:00.000Z\",\n//           \"2018-09-19T02:30:00.000Z\",\n//           \"2018-09-19T03:30:00.000Z\",\n//           \"2018-09-19T04:30:00.000Z\",\n//           \"2018-09-19T05:30:00.000Z\",\n//           \"2018-09-19T06:30:00.000Z\",\n//         ],\n//       },\n//     },\n//   };\n\n//   return (\n//     <motion.div\n//       className=\"ExpandedCard\"\n//       style={{\n//         background: param.color.backGround,\n//         boxShadow: param.color.boxShadow,\n//       }}\n//       layoutId=\"expandableCard\"\n//     >\n//       <div style={{ alignSelf: \"flex-end\", cursor: \"pointer\", color: \"white\" }}>\n//         <UilTimes onClick={setExpanded} />\n//       </div>\n//         <span>{param.title}</span>\n//       <div className=\"chartContainer\">\n//         <Chart options={data.options} series={param.series} type=\"area\" />\n//       </div>\n//       <span>Last 24 hours</span>\n//     </motion.div>\n//   );\n// }\n\n// export default Card;","map":{"version":3,"names":[],"sources":["D:/visitor_fe/React-Admin-Dashboard-public-master/src/components/Card/Card.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import \"./Card.css\";\r\n// import { CircularProgressbar } from \"react-circular-progressbar\";\r\n// import \"react-circular-progressbar/dist/styles.css\";\r\n// import { motion, AnimateSharedLayout } from \"framer-motion\";\r\n// import { UilTimes } from \"@iconscout/react-unicons\";\r\n// import Chart from \"react-apexcharts\";\r\n\r\n// // parent Card\r\n\r\n// const Card = (props) => {\r\n//   const [expanded, setExpanded] = useState(false);\r\n//   return (\r\n//     <AnimateSharedLayout>\r\n//       {expanded ? (\r\n//         <ExpandedCard param={props} setExpanded={() => setExpanded(false)} />\r\n//       ) : (\r\n//         <CompactCard param={props} setExpanded={() => setExpanded(true)} />\r\n//       )}\r\n//     </AnimateSharedLayout>\r\n//   );\r\n// };\r\n\r\n// // Compact Card\r\n// function CompactCard({ param, setExpanded }) {\r\n//   const Png = param.png;\r\n//   return (\r\n//     <motion.div\r\n//       className=\"CompactCard\"\r\n//       style={{\r\n//         background: param.color.backGround,\r\n//         boxShadow: param.color.boxShadow,\r\n//       }}\r\n//       layoutId=\"expandableCard\"\r\n//       onClick={setExpanded}\r\n//     >\r\n//       <div className=\"radialBar\">\r\n//         <CircularProgressbar\r\n//           value={param.barValue}\r\n//           text={`${param.barValue}%`}\r\n//         />\r\n//         <span>{param.title}</span>\r\n//       </div>\r\n//       <div className=\"detail\">\r\n//         <Png />\r\n//         <span>{param.value}</span>\r\n//         <span>Last 24 hours</span>\r\n//       </div>\r\n//     </motion.div>\r\n//   );\r\n// }\r\n\r\n// // Expanded Card\r\n// function ExpandedCard({ param, setExpanded }) {\r\n//   const data = {\r\n//     options: {\r\n//       chart: {\r\n//         type: \"area\",\r\n//         height: \"auto\",\r\n//       },\r\n\r\n//       dropShadow: {\r\n//         enabled: false,\r\n//         enabledOnSeries: undefined,\r\n//         top: 0,\r\n//         left: 0,\r\n//         blur: 3,\r\n//         color: \"#000\",\r\n//         opacity: 0.35,\r\n//       },\r\n\r\n//       fill: {\r\n//         colors: [\"#fff\"],\r\n//         type: \"gradient\",\r\n//       },\r\n//       dataLabels: {\r\n//         enabled: false,\r\n//       },\r\n//       stroke: {\r\n//         curve: \"smooth\",\r\n//         colors: [\"white\"],\r\n//       },\r\n//       tooltip: {\r\n//         x: {\r\n//           format: \"dd/MM/yy HH:mm\",\r\n//         },\r\n//       },\r\n//       grid: {\r\n//         show: true,\r\n//       },\r\n//       xaxis: {\r\n//         type: \"datetime\",\r\n//         categories: [\r\n//           \"2018-09-19T00:00:00.000Z\",\r\n//           \"2018-09-19T01:30:00.000Z\",\r\n//           \"2018-09-19T02:30:00.000Z\",\r\n//           \"2018-09-19T03:30:00.000Z\",\r\n//           \"2018-09-19T04:30:00.000Z\",\r\n//           \"2018-09-19T05:30:00.000Z\",\r\n//           \"2018-09-19T06:30:00.000Z\",\r\n//         ],\r\n//       },\r\n//     },\r\n//   };\r\n\r\n//   return (\r\n//     <motion.div\r\n//       className=\"ExpandedCard\"\r\n//       style={{\r\n//         background: param.color.backGround,\r\n//         boxShadow: param.color.boxShadow,\r\n//       }}\r\n//       layoutId=\"expandableCard\"\r\n//     >\r\n//       <div style={{ alignSelf: \"flex-end\", cursor: \"pointer\", color: \"white\" }}>\r\n//         <UilTimes onClick={setExpanded} />\r\n//       </div>\r\n//         <span>{param.title}</span>\r\n//       <div className=\"chartContainer\">\r\n//         <Chart options={data.options} series={param.series} type=\"area\" />\r\n//       </div>\r\n//       <span>Last 24 hours</span>\r\n//     </motion.div>\r\n//   );\r\n// }\r\n\r\n// export default Card;\r\n"],"mappings},"metadata":{},"sourceType":"module"}